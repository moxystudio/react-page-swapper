{"version":3,"file":"static/webpack/static/development/pages/_app.js.07b7f9cce5e271a23bf6.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import './_global.css';\nimport React, { useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport PageSwapper from '@moxy/react-page-swapper';\nimport scrollRestorer from '@mapbox/scroll-restorer';\nimport ThemeProvider from '../components/theme-provider';\nimport { PageTransition } from '../components';\nimport styles from './_app.module.css';\n\nconst App = ({ Component, pageProps }) => {\n    useEffect(() => {\n        const jssStyles = document.querySelector('#jss-server-side');\n\n        if (jssStyles) {\n            jssStyles.parentElement.removeChild(jssStyles);\n        }\n    }, []);\n\n    useEffect(() => {\n        scrollRestorer.start();\n    }, []);\n\n    const handleSwapBegin = useMemo(() => {\n        scrollRestorer.end();\n    }, []);\n\n    const handleSwapEnd = useMemo(() => {\n        scrollRestorer.start();\n    }, []);\n\n    const updateScroll = useMemo(() => {\n        const scroll = scrollRestorer.getSavedScroll();\n\n        if (!scroll) {\n            window.scrollTo(0, 0);\n        } else {\n            scrollRestorer.restoreScroll();\n        }\n    }, []);\n\n    const router = useRouter();\n\n    return (\n        <>\n            <Head>\n                <title>@moxy/react-page-swapper demo</title>\n            </Head>\n\n            <ThemeProvider>\n                <PageSwapper\n                    className={ styles.pageSwapper }\n                    node={ <Component { ...pageProps } /> }\n                    animation={ router.query.animation ?? 'none' }\n                    updateScroll={ updateScroll }\n                    onSwapBegin={ handleSwapBegin }\n                    onSwapEnd={ handleSwapEnd }>\n                    { (props) => <PageTransition { ...props } /> }\n                </PageSwapper>\n            </ThemeProvider>\n        </>\n    );\n};\n\nApp.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    pageProps: PropTypes.object.isRequired,\n};\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/_app.js.fdd9c72aa645742415f1.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport PageSwapper, { isPopState } from '@moxy/react-page-swapper';\nimport ThemeProvider from '../components/theme-provider';\nimport { PageTransition } from '../components';\nimport createScrollBehavior from '../components/scroll-behavior';\nimport './_global.css';\n\nconst App = ({ Component, pageProps }) => {\n    useEffect(() => {\n        const jssStyles = document.querySelector('#jss-server-side');\n\n        if (jssStyles) {\n            jssStyles.parentElement.removeChild(jssStyles);\n        }\n    }, []);\n\n    const router = useRouter();\n    const scrollBehavior = useMemo(() => createScrollBehavior(router), []);\n\n    return (\n        <>\n            <Head>\n                <title>@moxy/react-page-swapper demo</title>\n                <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n            </Head>\n\n            <ThemeProvider>\n                <PageSwapper\n                    updateScroll={ () => scrollBehavior.updateScroll() }\n                    node={ <Component { ...pageProps } /> }\n                    animation={ isPopState() ? 'none' : router.query.animation ?? 'none' }>\n                    { (props) => <PageTransition { ...props } /> }\n                </PageSwapper>\n            </ThemeProvider>\n        </>\n    );\n};\n\nApp.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    pageProps: PropTypes.object.isRequired,\n};\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}